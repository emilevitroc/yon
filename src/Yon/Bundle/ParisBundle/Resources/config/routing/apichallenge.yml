apichallenge_index:
    path:     /
    defaults: { _controller: "YonParisBundle:ApiChallenge:index" }
    methods:  GET

apichallenge_show:
    path:     /{id}/show
    defaults: { _controller: "YonParisBundle:ApiChallenge:show" }
    methods:  GET

apichallenge_new:
    path:     /new
    defaults: { _controller: "YonParisBundle:ApiChallenge:new" }
    methods:  [GET, POST]

apichallenge_edit:
    path:     /{id}/edit
    defaults: { _controller: "YonParisBundle:ApiChallenge:edit" }
    methods:  [GET, POST]

apichallenge_delete:
    path:     /{id}/delete
    defaults: { _controller: "YonParisBundle:ApiChallenge:delete" }
    methods:  DELETE
    
apichallenge_reset_concours_ajax:
    path:     /reset-concours-ajax
    defaults: { _controller: "YonParisBundle:ApiChallenge:resetConcoursAjax" }
    methods:  POST
    
apichallenge_twitter_hashtag_ajax:
    path:     /twitter-hashtag-ajax
    defaults: { _controller: "YonParisBundle:ApiChallenge:twitterHashtagAjax" }
    methods:  GET
    
apichallenge_add_challenge_to_contest_ajax:
    path:     /add-challenge-to-contest-ajax
    defaults: { _controller: "YonParisBundle:ApiChallenge:addChallengeToContestAjax" }
    methods:  POST
    
apichallenge_trends:
    path:     /trends
    defaults: { _controller: "YonParisBundle:ApiChallenge:trends" }
    methods:  GET
apichallenge_add_to_trends_ajax:
    path:     /add-to-trends-ajax
    defaults: { _controller: "YonParisBundle:ApiChallenge:addToTrendsAjax" }
    methods:  POST
    
apichallenge_del_to_trends_ajax:
    path:     /del-to-trends-ajax
    defaults: { _controller: "YonParisBundle:ApiChallenge:delToTrendsAjax" }
    methods:  POST
    
apichallenge_delete_ajax:
    path:     /delete-ajax
    defaults: { _controller: "YonParisBundle:ApiChallenge:deleteAjax" }
    methods:  POST
apichallenge_moderate:
    path:     /moderate
    defaults: { _controller: "YonParisBundle:ApiChallenge:moderate" }
    methods:  GET
apichallenge_reset_moderate:
    path:     /reset-moderate
    defaults: { _controller: "YonParisBundle:ApiChallenge:resetModerate" }
    methods:  GET
apichallenge_reset_moderate_immediatly:
    path:     /reset-moderate-immediatly
    defaults: { _controller: "YonParisBundle:ApiChallenge:resetModerateImmediatly" }
    methods:  GET
apichallenge_validate_one_challenge_ajax:
    path:     /validate-one-challenge-ajax
    defaults: { _controller: "YonParisBundle:ApiChallenge:validateOneChallengeAjax" }
    methods:  POST
apichallenge_lock_one_challenge_ajax:
    path:     /lock-one-challenge-ajax
    defaults: { _controller: "YonParisBundle:ApiChallenge:lockOneChallengeAjax" }
    methods:  POST
apichallenge_validate_all_challenge_ajax:
    path:     /validate-all-challenge-ajax
    defaults: { _controller: "YonParisBundle:ApiChallenge:validateAllChallengeAjax" }
    methods:  POST
apichallenge_contest_search_ajax:
    path:     /contest-search-ajax
    defaults: { _controller: "YonParisBundle:ApiChallenge:contestSearchAjax" }
    methods:  POST
apichallenge_testWebservice:
    path:     /test-webservices
    defaults: { _controller: "YonParisBundle:ApiChallenge:testWebservice" }
    methods:  GET